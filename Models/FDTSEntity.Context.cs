//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FDTSDb : DbContext
    {
        public FDTSDb()
            : base("name=FDTSDb")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<int>> SP_GetPRNo(string office, Nullable<int> currentnumber, string mon)
        {
            var officeParameter = office != null ?
                new ObjectParameter("office", office) :
                new ObjectParameter("office", typeof(string));
    
            var currentnumberParameter = currentnumber.HasValue ?
                new ObjectParameter("currentnumber", currentnumber) :
                new ObjectParameter("currentnumber", typeof(int));
    
            var monParameter = mon != null ?
                new ObjectParameter("mon", mon) :
                new ObjectParameter("mon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetPRNo", officeParameter, currentnumberParameter, monParameter);
        }
    
        public virtual ObjectResult<string> SP_GetObrNo(string category, Nullable<int> currentnumber, string code, string mon)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var currentnumberParameter = currentnumber.HasValue ?
                new ObjectParameter("currentnumber", currentnumber) :
                new ObjectParameter("currentnumber", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var monParameter = mon != null ?
                new ObjectParameter("mon", mon) :
                new ObjectParameter("mon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetObrNo", categoryParameter, currentnumberParameter, codeParameter, monParameter);
        }
    
        public virtual int SP_InsertDDTL(string controlNo, string dDTL_ACT, string dDTL_TRKN)
        {
            var controlNoParameter = controlNo != null ?
                new ObjectParameter("ControlNo", controlNo) :
                new ObjectParameter("ControlNo", typeof(string));
    
            var dDTL_ACTParameter = dDTL_ACT != null ?
                new ObjectParameter("DDTL_ACT", dDTL_ACT) :
                new ObjectParameter("DDTL_ACT", typeof(string));
    
            var dDTL_TRKNParameter = dDTL_TRKN != null ?
                new ObjectParameter("DDTL_TRKN", dDTL_TRKN) :
                new ObjectParameter("DDTL_TRKN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertDDTL", controlNoParameter, dDTL_ACTParameter, dDTL_TRKNParameter);
        }
    
        public virtual ObjectResult<string> SP_GetTrknNo(string fiscalyear, string currentnumber)
        {
            var fiscalyearParameter = fiscalyear != null ?
                new ObjectParameter("fiscalyear", fiscalyear) :
                new ObjectParameter("fiscalyear", typeof(string));
    
            var currentnumberParameter = currentnumber != null ?
                new ObjectParameter("currentnumber", currentnumber) :
                new ObjectParameter("currentnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetTrknNo", fiscalyearParameter, currentnumberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_InsertDoc(string fiscalyear, string trkno, string dOCS_DESC, string dOCS_TYPE, string dOCS_CBY, string dOCS_RCTR, string dOCS_TRNO, string dOCS_CAT, string dOCS_OBR, Nullable<decimal> dOCS_AMT, string dOCS_RCTR2, string dOCS_CTRLNO, Nullable<int> rowsAffected, string dOCS_STATUS)
        {
            var fiscalyearParameter = fiscalyear != null ?
                new ObjectParameter("fiscalyear", fiscalyear) :
                new ObjectParameter("fiscalyear", typeof(string));
    
            var trknoParameter = trkno != null ?
                new ObjectParameter("trkno", trkno) :
                new ObjectParameter("trkno", typeof(string));
    
            var dOCS_DESCParameter = dOCS_DESC != null ?
                new ObjectParameter("DOCS_DESC", dOCS_DESC) :
                new ObjectParameter("DOCS_DESC", typeof(string));
    
            var dOCS_TYPEParameter = dOCS_TYPE != null ?
                new ObjectParameter("DOCS_TYPE", dOCS_TYPE) :
                new ObjectParameter("DOCS_TYPE", typeof(string));
    
            var dOCS_CBYParameter = dOCS_CBY != null ?
                new ObjectParameter("DOCS_CBY", dOCS_CBY) :
                new ObjectParameter("DOCS_CBY", typeof(string));
    
            var dOCS_RCTRParameter = dOCS_RCTR != null ?
                new ObjectParameter("DOCS_RCTR", dOCS_RCTR) :
                new ObjectParameter("DOCS_RCTR", typeof(string));
    
            var dOCS_TRNOParameter = dOCS_TRNO != null ?
                new ObjectParameter("DOCS_TRNO", dOCS_TRNO) :
                new ObjectParameter("DOCS_TRNO", typeof(string));
    
            var dOCS_CATParameter = dOCS_CAT != null ?
                new ObjectParameter("DOCS_CAT", dOCS_CAT) :
                new ObjectParameter("DOCS_CAT", typeof(string));
    
            var dOCS_OBRParameter = dOCS_OBR != null ?
                new ObjectParameter("DOCS_OBR", dOCS_OBR) :
                new ObjectParameter("DOCS_OBR", typeof(string));
    
            var dOCS_AMTParameter = dOCS_AMT.HasValue ?
                new ObjectParameter("DOCS_AMT", dOCS_AMT) :
                new ObjectParameter("DOCS_AMT", typeof(decimal));
    
            var dOCS_RCTR2Parameter = dOCS_RCTR2 != null ?
                new ObjectParameter("DOCS_RCTR2", dOCS_RCTR2) :
                new ObjectParameter("DOCS_RCTR2", typeof(string));
    
            var dOCS_CTRLNOParameter = dOCS_CTRLNO != null ?
                new ObjectParameter("DOCS_CTRLNO", dOCS_CTRLNO) :
                new ObjectParameter("DOCS_CTRLNO", typeof(string));
    
            var rowsAffectedParameter = rowsAffected.HasValue ?
                new ObjectParameter("rowsAffected", rowsAffected) :
                new ObjectParameter("rowsAffected", typeof(int));
    
            var dOCS_STATUSParameter = dOCS_STATUS != null ?
                new ObjectParameter("DOCS_STATUS", dOCS_STATUS) :
                new ObjectParameter("DOCS_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_InsertDoc", fiscalyearParameter, trknoParameter, dOCS_DESCParameter, dOCS_TYPEParameter, dOCS_CBYParameter, dOCS_RCTRParameter, dOCS_TRNOParameter, dOCS_CATParameter, dOCS_OBRParameter, dOCS_AMTParameter, dOCS_RCTR2Parameter, dOCS_CTRLNOParameter, rowsAffectedParameter, dOCS_STATUSParameter);
        }
    
        public virtual ObjectResult<string> SP_GetCtrlNo(string category, Nullable<int> currentnumber, string code, string scode, string fiscalyear)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var currentnumberParameter = currentnumber.HasValue ?
                new ObjectParameter("currentnumber", currentnumber) :
                new ObjectParameter("currentnumber", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var scodeParameter = scode != null ?
                new ObjectParameter("scode", scode) :
                new ObjectParameter("scode", typeof(string));
    
            var fiscalyearParameter = fiscalyear != null ?
                new ObjectParameter("fiscalyear", fiscalyear) :
                new ObjectParameter("fiscalyear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetCtrlNo", categoryParameter, currentnumberParameter, codeParameter, scodeParameter, fiscalyearParameter);
        }
    }
}
